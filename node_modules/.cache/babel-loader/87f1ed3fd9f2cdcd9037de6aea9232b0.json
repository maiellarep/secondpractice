{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practiceapp1\\\\src\\\\Articles.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\nimport * as f from 'firebase';\nimport AllArticles from './AllArticles';\nimport NewArticle from './NewArticle';\nimport UserArticle from './UserArticle';\nimport EditArticle from './EditArticle';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom'; //import App from './App'\n//import Mainpage from './Mainpage'\n//import {Link} from 'react-router-dom'\n\nclass Articles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delete = param => e => {\n      firebase.database().ref('posts/' + param).remove(); //window.location.reload();\n      //this.componentDidMount();\n\n      this.forceUpdate();\n      console.log('Delete');\n    };\n\n    this.delete = this.delete.bind(this);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      postinfo: [],\n      uid: ''\n    };\n  }\n\n  /* componentDidMount() {\r\n  \n     firebase.auth().onAuthStateChanged((user) => {\r\n         if(user) {\r\n           this.setState({uid : user.uid}); \r\n         } else {\r\n           this.setState({uid: null});\r\n         }\r\n         });\r\n  \n       let newState = [];\r\n       const db = firebase.database();\r\n       const postdata = db.ref('posts/' + this.state.uid);\r\n  \n       postdata.on('value', (snapshot) =>\r\n       {\r\n           let posts = snapshot.val();\r\n           for(let post in posts)\r\n           {\r\n               newState.push({\r\n                   id: post,\r\n                   title: posts[post].title,\r\n                   text: posts[post].text\r\n               });\r\n           }\r\n           this.setState({\r\n               postinfo: newState\r\n           });\r\n       });\r\n   };*/\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          uid: user.uid\n        });\n      } else {\n        this.setState({\n          uid: null\n        });\n      }\n    });\n    let newState = [];\n    const db = firebase.database();\n    const postdata = db.ref('posts/');\n    postdata.on('value', snapshot => {\n      let posts = snapshot.val();\n\n      for (let post in posts) {\n        newState.push({\n          id: post,\n          title: posts[post].title,\n          description: posts[post].description,\n          text: posts[post].text,\n          creationdate: posts[post].creationdate,\n          editdate: posts[post].editdate,\n          uid: posts[post].uid\n        });\n      }\n\n      this.setState({\n        postinfo: newState\n      });\n    });\n  }\n\n  logout() {\n    //firebase.auth().signOut();\n    firebase.auth().signOut().then(function () {\n      console.log('Signed Out');\n    }, function (error) {\n      console.error('Sign Out Error', error);\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, \"Articles\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, \"Logout\"), this.state.postinfo.map(postinfo => {\n        if (postinfo.uid === this.state.uid) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: postinfo.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }\n          }, postinfo.title), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }\n          }, postinfo.description), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }\n          }, postinfo.text), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }\n          }, postinfo.creationdate), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }\n          }, postinfo.editdate), /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }\n          }, postinfo.id), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: this.delete(postinfo.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }\n          }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: /edit/ + postinfo.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 47\n            }\n          }, \"Edit\")), /*#__PURE__*/React.createElement(\"hr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }\n          }));\n        }\n      }), /*#__PURE__*/React.createElement(NewArticle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }));\n    }\n  }\n\n}\n/*        \r\n        return (\r\n              <div>\r\n                <h1>Articles</h1>\r\n                <UserArticle /> \r\n              </div>\r\n          );*/\n\n/*{this.state.postinfo.map((postinfo) => {\r\n\r\n  return (\r\n    <UserArticle id={postinfo.id}/>\r\n  )\r\n  \r\n})}*/\n\n/*class Articles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Articles</h1>\r\n        <button onClick={this.logout}>Logout</button>\r\n        <Singlearticle />\r\n        <NewArticle />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n*/\n\n/*function Articles() {\r\n  return (\r\n    <div>\r\n      <h1>Articles</h1>\r\n    </div>\r\n  );\r\n}*/\n\n\nexport default Articles;","map":{"version":3,"sources":["C:/Users/User/Desktop/practiceapp1/src/Articles.js"],"names":["React","Component","firebase","f","AllArticles","NewArticle","UserArticle","EditArticle","BrowserRouter","Router","Switch","Route","Link","Articles","constructor","props","delete","param","e","database","ref","remove","forceUpdate","console","log","bind","logout","state","postinfo","uid","componentDidMount","auth","onAuthStateChanged","user","setState","newState","db","postdata","on","snapshot","posts","val","post","push","id","title","description","text","creationdate","editdate","signOut","then","error","history","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport firebase from './firebase.js';\r\nimport * as f from 'firebase';\r\nimport AllArticles from './AllArticles';\r\nimport NewArticle from './NewArticle';\r\nimport UserArticle from './UserArticle';\r\nimport EditArticle from './EditArticle';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n//import App from './App'\r\n//import Mainpage from './Mainpage'\r\n//import {Link} from 'react-router-dom'\r\n\r\nclass Articles extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.delete = this.delete.bind(this);\r\n      this.logout = this.logout.bind(this);\r\n      this.state = {\r\n          postinfo: [],\r\n          uid: '', \r\n      };\r\n      \r\n  };\r\n\r\n\r\n /* componentDidMount() {\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if(user) {\r\n          this.setState({uid : user.uid}); \r\n        } else {\r\n          this.setState({uid: null});\r\n        }\r\n        });\r\n\r\n      let newState = [];\r\n      const db = firebase.database();\r\n      const postdata = db.ref('posts/' + this.state.uid);\r\n\r\n      postdata.on('value', (snapshot) =>\r\n      {\r\n          let posts = snapshot.val();\r\n          for(let post in posts)\r\n          {\r\n              newState.push({\r\n                  id: post,\r\n                  title: posts[post].title,\r\n                  text: posts[post].text\r\n              });\r\n          }\r\n          this.setState({\r\n              postinfo: newState\r\n          });\r\n      });\r\n  };*/\r\n\r\n  componentDidMount() {\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if(user) {\r\n          this.setState({uid : user.uid}); \r\n        } else {\r\n          this.setState({uid: null});\r\n        }\r\n        });\r\n\r\n        let newState = [];\r\n        const db = firebase.database();\r\n        const postdata = db.ref('posts/');\r\n\r\n        postdata.on('value', (snapshot) =>\r\n        {\r\n            let posts = snapshot.val();\r\n            for(let post in posts)\r\n            {\r\n                newState.push({\r\n                  id: post,\r\n                  title: posts[post].title,\r\n                  description: posts[post].description,\r\n                  text: posts[post].text,\r\n                  creationdate: posts[post].creationdate,\r\n                  editdate: posts[post].editdate,\r\n                  uid: posts[post].uid\r\n                });\r\n            }\r\n            this.setState({\r\n                postinfo: newState\r\n            });\r\n        });\r\n  };\r\n\r\n  delete = param => e => \r\n  {\r\n    firebase.database().ref('posts/' + param).remove();\r\n    //window.location.reload();\r\n    //this.componentDidMount();\r\n    this.forceUpdate();\r\n    console.log('Delete');\r\n  }\r\n\r\n  logout() {\r\n    //firebase.auth().signOut();\r\n    firebase.auth().signOut().then(function() {\r\n      console.log('Signed Out');\r\n    }, function(error) {\r\n      console.error('Sign Out Error', error);\r\n    });\r\n    this.props.history.push('/');\r\n  }\r\n\r\n \r\n  render() {\r\n      {\r\n        return (\r\n          \r\n          <div>\r\n            \r\n            <h1>Articles</h1>\r\n            <button type=\"button\" onClick={this.logout}>Logout</button>\r\n              {this.state.postinfo.map((postinfo) => {\r\n\r\n                if(postinfo.uid === this.state.uid)\r\n                {\r\n                  return (\r\n                    <div key={postinfo.id}>\r\n                        <h1>{postinfo.title}</h1>\r\n                        <p>{postinfo.description}</p>\r\n                        <p>{postinfo.text}</p>\r\n                        <p>{postinfo.creationdate}</p>\r\n                        <p>{postinfo.editdate}</p>\r\n                        <h1>{postinfo.id}</h1>\r\n                        <button type=\"button\" onClick={this.delete(postinfo.id)}>Delete</button>\r\n                        <button type=\"button\"><Link to={/edit/+ postinfo.id}>Edit</Link></button>\r\n                        <hr/>\r\n                    </div>\r\n                );\r\n                }\r\n                  \r\n              })}\r\n              <NewArticle />\r\n          </div>\r\n      );  \r\n\r\n      }\r\n      \r\n  }\r\n}\r\n\r\n/*        \r\n        return (\r\n              <div>\r\n                <h1>Articles</h1>\r\n                <UserArticle /> \r\n              </div>\r\n          );*/\r\n\r\n/*{this.state.postinfo.map((postinfo) => {\r\n\r\n  return (\r\n    <UserArticle id={postinfo.id}/>\r\n  )\r\n  \r\n})}*/\r\n\r\n/*class Articles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Articles</h1>\r\n        <button onClick={this.logout}>Logout</button>\r\n        <Singlearticle />\r\n        <NewArticle />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n*/\r\n/*function Articles() {\r\n  return (\r\n    <div>\r\n      <h1>Articles</h1>\r\n    </div>\r\n  );\r\n}*/\r\n\r\nexport default Articles;"]},"metadata":{},"sourceType":"module"}