{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practiceapp1\\\\src\\\\Articles.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\nimport AllArticles from './AllArticles';\nimport NewArticle from './NewArticle';\nimport UserArticle from './UserArticle'; //import App from './App'\n//import Mainpage from './Mainpage'\n//import {Link} from 'react-router-dom'\n\nclass Articles extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delete = param => e => {\n      firebase.database().ref('posts/' + param).remove();\n      this.state.postinfo.splice(param, 1);\n      console.log('Delete');\n    };\n\n    this.delete = this.delete.bind(this);\n    this.state = {\n      postinfo: [],\n      uid: ''\n    };\n  }\n\n  /* componentDidMount() {\r\n  \n     firebase.auth().onAuthStateChanged((user) => {\r\n         if(user) {\r\n           this.setState({uid : user.uid}); \r\n         } else {\r\n           this.setState({uid: null});\r\n         }\r\n         });\r\n  \n       let newState = [];\r\n       const db = firebase.database();\r\n       const postdata = db.ref('posts/' + this.state.uid);\r\n  \n       postdata.on('value', (snapshot) =>\r\n       {\r\n           let posts = snapshot.val();\r\n           for(let post in posts)\r\n           {\r\n               newState.push({\r\n                   id: post,\r\n                   title: posts[post].title,\r\n                   text: posts[post].text\r\n               });\r\n           }\r\n           this.setState({\r\n               postinfo: newState\r\n           });\r\n       });\r\n   };*/\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          uid: user.uid\n        });\n      } else {\n        this.setState({\n          uid: null\n        });\n      }\n    });\n    let newState = [];\n    const db = firebase.database();\n    const postdata = db.ref('posts/');\n    postdata.on('value', snapshot => {\n      let posts = snapshot.val();\n\n      for (let post in posts) {\n        newState.push({\n          id: post,\n          title: posts[post].title,\n          description: posts[post].description,\n          text: posts[post].text,\n          creationdate: posts[post].creationdate,\n          editdate: posts[post].editdate,\n          uid: posts[post].uid\n        });\n      }\n\n      this.setState({\n        postinfo: newState\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      postinfo: this.state.postinfo\n    });\n  }\n\n  render() {\n    {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, \"Articles\"), this.state.postinfo.map(postinfo => {\n        if (postinfo.uid === this.state.uid) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: postinfo.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }\n          }, postinfo.title), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }\n          }, postinfo.description), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }\n          }, postinfo.text), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }\n          }, postinfo.creationdate), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }\n          }, postinfo.editdate), /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }\n          }, postinfo.id), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: this.delete(postinfo.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }\n          }, \"Delete\"), /*#__PURE__*/React.createElement(\"hr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }\n          }));\n        }\n      }), /*#__PURE__*/React.createElement(NewArticle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }));\n    }\n  }\n\n}\n/*        \r\n        return (\r\n              <div>\r\n                <h1>Articles</h1>\r\n                <UserArticle /> \r\n              </div>\r\n          );*/\n\n/*{this.state.postinfo.map((postinfo) => {\r\n\r\n  return (\r\n    <UserArticle id={postinfo.id}/>\r\n  )\r\n  \r\n})}*/\n\n/*class Articles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Articles</h1>\r\n        <button onClick={this.logout}>Logout</button>\r\n        <Singlearticle />\r\n        <NewArticle />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n*/\n\n/*function Articles() {\r\n  return (\r\n    <div>\r\n      <h1>Articles</h1>\r\n    </div>\r\n  );\r\n}*/\n\n\nexport default Articles;","map":{"version":3,"sources":["C:/Users/User/Desktop/practiceapp1/src/Articles.js"],"names":["React","Component","firebase","AllArticles","NewArticle","UserArticle","Articles","constructor","props","delete","param","e","database","ref","remove","state","postinfo","splice","console","log","bind","uid","componentDidMount","auth","onAuthStateChanged","user","setState","newState","db","postdata","on","snapshot","posts","val","post","push","id","title","description","text","creationdate","editdate","componentDidUpdate","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport firebase from './firebase.js'\r\nimport AllArticles from './AllArticles';\r\nimport NewArticle from './NewArticle';\r\nimport UserArticle from './UserArticle';\r\n//import App from './App'\r\n//import Mainpage from './Mainpage'\r\n//import {Link} from 'react-router-dom'\r\n\r\nclass Articles extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.delete = this.delete.bind(this);\r\n      this.state = {\r\n          postinfo: [],\r\n          uid: '', \r\n      };\r\n      \r\n  };\r\n\r\n\r\n /* componentDidMount() {\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if(user) {\r\n          this.setState({uid : user.uid}); \r\n        } else {\r\n          this.setState({uid: null});\r\n        }\r\n        });\r\n\r\n      let newState = [];\r\n      const db = firebase.database();\r\n      const postdata = db.ref('posts/' + this.state.uid);\r\n\r\n      postdata.on('value', (snapshot) =>\r\n      {\r\n          let posts = snapshot.val();\r\n          for(let post in posts)\r\n          {\r\n              newState.push({\r\n                  id: post,\r\n                  title: posts[post].title,\r\n                  text: posts[post].text\r\n              });\r\n          }\r\n          this.setState({\r\n              postinfo: newState\r\n          });\r\n      });\r\n  };*/\r\n\r\n  componentDidMount() {\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if(user) {\r\n          this.setState({uid : user.uid}); \r\n        } else {\r\n          this.setState({uid: null});\r\n        }\r\n        });\r\n\r\n        let newState = [];\r\n        const db = firebase.database();\r\n        const postdata = db.ref('posts/');\r\n\r\n        postdata.on('value', (snapshot) =>\r\n        {\r\n            let posts = snapshot.val();\r\n            for(let post in posts)\r\n            {\r\n                newState.push({\r\n                  id: post,\r\n                  title: posts[post].title,\r\n                  description: posts[post].description,\r\n                  text: posts[post].text,\r\n                  creationdate: posts[post].creationdate,\r\n                  editdate: posts[post].editdate,\r\n                  uid: posts[post].uid\r\n                });\r\n            }\r\n            this.setState({\r\n                postinfo: newState\r\n            });\r\n        });\r\n  };\r\n\r\n  delete = param => e => \r\n  {\r\n     firebase.database().ref('posts/' + param).remove();\r\n     this.state.postinfo.splice(param, 1)\r\n    console.log('Delete');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n     this.setState({\r\n       postinfo: this.state.postinfo\r\n     })\r\n  }\r\n\r\n  render() {\r\n      {\r\n        return (\r\n          <div>\r\n            <h1>Articles</h1>\r\n              {this.state.postinfo.map((postinfo) => {\r\n                if(postinfo.uid === this.state.uid)\r\n                {\r\n                  return (\r\n                    <div key={postinfo.id}>\r\n                        <h1>{postinfo.title}</h1>\r\n                        <p>{postinfo.description}</p>\r\n                        <p>{postinfo.text}</p>\r\n                        <p>{postinfo.creationdate}</p>\r\n                        <p>{postinfo.editdate}</p>\r\n                        <h1>{postinfo.id}</h1>\r\n                        <button type=\"button\" onClick={this.delete(postinfo.id)}>Delete</button>\r\n                        <hr/>\r\n                    </div>\r\n                );\r\n                }\r\n                  \r\n              })}\r\n              <NewArticle />\r\n          </div>\r\n      );  \r\n\r\n      }\r\n      \r\n  }\r\n}\r\n\r\n/*        \r\n        return (\r\n              <div>\r\n                <h1>Articles</h1>\r\n                <UserArticle /> \r\n              </div>\r\n          );*/\r\n\r\n/*{this.state.postinfo.map((postinfo) => {\r\n\r\n  return (\r\n    <UserArticle id={postinfo.id}/>\r\n  )\r\n  \r\n})}*/\r\n\r\n/*class Articles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Articles</h1>\r\n        <button onClick={this.logout}>Logout</button>\r\n        <Singlearticle />\r\n        <NewArticle />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n*/\r\n/*function Articles() {\r\n  return (\r\n    <div>\r\n      <h1>Articles</h1>\r\n    </div>\r\n  );\r\n}*/\r\n\r\nexport default Articles;"]},"metadata":{},"sourceType":"module"}